//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Player1Controller.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Player1Controller : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Player1Controller()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player1Controller"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""c36803d6-494e-4583-84ad-347a27cb42c0"",
            ""actions"": [
                {
                    ""name"": ""Climb_Left"",
                    ""type"": ""Button"",
                    ""id"": ""66c9b3ec-c711-4e0b-a7af-fd1e5d91242b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Climb_Right"",
                    ""type"": ""Button"",
                    ""id"": ""1eb8f6dd-c325-475f-a8e5-31c6d7aa05ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move_X"",
                    ""type"": ""Value"",
                    ""id"": ""fb3639c7-e723-4494-9f2b-1a53c656510d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Hold"",
                    ""type"": ""Button"",
                    ""id"": ""1e726c96-68a3-4e67-be64-1686f0848237"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Equip01"",
                    ""type"": ""Button"",
                    ""id"": ""16241a9b-689e-46b6-98a7-6882f405b1e8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Equip02"",
                    ""type"": ""Button"",
                    ""id"": ""1da41566-0bb9-47c3-8016-bfff8c2f9042"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Equip03"",
                    ""type"": ""Button"",
                    ""id"": ""8cc51995-a5a1-4a9e-9750-b4e56c3272bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Repair"",
                    ""type"": ""Button"",
                    ""id"": ""f01c6a16-8fa1-4d73-9947-abb7d9a38220"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Climb_Up"",
                    ""type"": ""Button"",
                    ""id"": ""4b760c0e-8aa2-4489-8cf1-3ccc85b81dbc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Climb_Down"",
                    ""type"": ""Button"",
                    ""id"": ""82e7b71e-d3bd-4884-b4ad-fe01cd0d0273"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0c260b49-97c2-42c3-9a1b-15bff8586035"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Climb_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""926d1d9b-40c5-4202-ab13-b50dc95f918c"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20ed4670-415c-477a-9fd4-b073ffb9bd5e"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e033450-f296-4dd9-aae0-8b271675cfc7"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32b723dc-54ea-40ef-b6da-24508a4618e8"",
                    ""path"": ""<XInputController>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Equip01"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac8b0748-d6ec-4a3f-a94a-2e0daf29d7df"",
                    ""path"": ""<XInputController>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Equip02"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25739ddb-d824-48a1-93fc-3702fe44a475"",
                    ""path"": ""<XInputController>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Equip03"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""090be448-c328-4301-87af-2852dfb6f0c1"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Repair"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47dedb26-7ad3-45b1-b83e-c81a8b6794d1"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Climb_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b1d22da-60cd-459a-a2c7-f2cb5699c268"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Climb_Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2c5ff69-ec43-4c10-bd7e-5df7c4ce113a"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Climb_Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Climb_Left = m_Gameplay.FindAction("Climb_Left", throwIfNotFound: true);
        m_Gameplay_Climb_Right = m_Gameplay.FindAction("Climb_Right", throwIfNotFound: true);
        m_Gameplay_Move_X = m_Gameplay.FindAction("Move_X", throwIfNotFound: true);
        m_Gameplay_Hold = m_Gameplay.FindAction("Hold", throwIfNotFound: true);
        m_Gameplay_Equip01 = m_Gameplay.FindAction("Equip01", throwIfNotFound: true);
        m_Gameplay_Equip02 = m_Gameplay.FindAction("Equip02", throwIfNotFound: true);
        m_Gameplay_Equip03 = m_Gameplay.FindAction("Equip03", throwIfNotFound: true);
        m_Gameplay_Repair = m_Gameplay.FindAction("Repair", throwIfNotFound: true);
        m_Gameplay_Climb_Up = m_Gameplay.FindAction("Climb_Up", throwIfNotFound: true);
        m_Gameplay_Climb_Down = m_Gameplay.FindAction("Climb_Down", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Climb_Left;
    private readonly InputAction m_Gameplay_Climb_Right;
    private readonly InputAction m_Gameplay_Move_X;
    private readonly InputAction m_Gameplay_Hold;
    private readonly InputAction m_Gameplay_Equip01;
    private readonly InputAction m_Gameplay_Equip02;
    private readonly InputAction m_Gameplay_Equip03;
    private readonly InputAction m_Gameplay_Repair;
    private readonly InputAction m_Gameplay_Climb_Up;
    private readonly InputAction m_Gameplay_Climb_Down;
    public struct GameplayActions
    {
        private @Player1Controller m_Wrapper;
        public GameplayActions(@Player1Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @Climb_Left => m_Wrapper.m_Gameplay_Climb_Left;
        public InputAction @Climb_Right => m_Wrapper.m_Gameplay_Climb_Right;
        public InputAction @Move_X => m_Wrapper.m_Gameplay_Move_X;
        public InputAction @Hold => m_Wrapper.m_Gameplay_Hold;
        public InputAction @Equip01 => m_Wrapper.m_Gameplay_Equip01;
        public InputAction @Equip02 => m_Wrapper.m_Gameplay_Equip02;
        public InputAction @Equip03 => m_Wrapper.m_Gameplay_Equip03;
        public InputAction @Repair => m_Wrapper.m_Gameplay_Repair;
        public InputAction @Climb_Up => m_Wrapper.m_Gameplay_Climb_Up;
        public InputAction @Climb_Down => m_Wrapper.m_Gameplay_Climb_Down;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Climb_Left.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClimb_Left;
                @Climb_Left.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClimb_Left;
                @Climb_Left.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClimb_Left;
                @Climb_Right.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClimb_Right;
                @Climb_Right.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClimb_Right;
                @Climb_Right.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClimb_Right;
                @Move_X.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove_X;
                @Move_X.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove_X;
                @Move_X.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove_X;
                @Hold.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHold;
                @Hold.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHold;
                @Hold.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHold;
                @Equip01.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEquip01;
                @Equip01.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEquip01;
                @Equip01.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEquip01;
                @Equip02.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEquip02;
                @Equip02.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEquip02;
                @Equip02.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEquip02;
                @Equip03.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEquip03;
                @Equip03.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEquip03;
                @Equip03.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEquip03;
                @Repair.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRepair;
                @Repair.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRepair;
                @Repair.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRepair;
                @Climb_Up.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClimb_Up;
                @Climb_Up.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClimb_Up;
                @Climb_Up.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClimb_Up;
                @Climb_Down.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClimb_Down;
                @Climb_Down.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClimb_Down;
                @Climb_Down.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClimb_Down;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Climb_Left.started += instance.OnClimb_Left;
                @Climb_Left.performed += instance.OnClimb_Left;
                @Climb_Left.canceled += instance.OnClimb_Left;
                @Climb_Right.started += instance.OnClimb_Right;
                @Climb_Right.performed += instance.OnClimb_Right;
                @Climb_Right.canceled += instance.OnClimb_Right;
                @Move_X.started += instance.OnMove_X;
                @Move_X.performed += instance.OnMove_X;
                @Move_X.canceled += instance.OnMove_X;
                @Hold.started += instance.OnHold;
                @Hold.performed += instance.OnHold;
                @Hold.canceled += instance.OnHold;
                @Equip01.started += instance.OnEquip01;
                @Equip01.performed += instance.OnEquip01;
                @Equip01.canceled += instance.OnEquip01;
                @Equip02.started += instance.OnEquip02;
                @Equip02.performed += instance.OnEquip02;
                @Equip02.canceled += instance.OnEquip02;
                @Equip03.started += instance.OnEquip03;
                @Equip03.performed += instance.OnEquip03;
                @Equip03.canceled += instance.OnEquip03;
                @Repair.started += instance.OnRepair;
                @Repair.performed += instance.OnRepair;
                @Repair.canceled += instance.OnRepair;
                @Climb_Up.started += instance.OnClimb_Up;
                @Climb_Up.performed += instance.OnClimb_Up;
                @Climb_Up.canceled += instance.OnClimb_Up;
                @Climb_Down.started += instance.OnClimb_Down;
                @Climb_Down.performed += instance.OnClimb_Down;
                @Climb_Down.canceled += instance.OnClimb_Down;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnClimb_Left(InputAction.CallbackContext context);
        void OnClimb_Right(InputAction.CallbackContext context);
        void OnMove_X(InputAction.CallbackContext context);
        void OnHold(InputAction.CallbackContext context);
        void OnEquip01(InputAction.CallbackContext context);
        void OnEquip02(InputAction.CallbackContext context);
        void OnEquip03(InputAction.CallbackContext context);
        void OnRepair(InputAction.CallbackContext context);
        void OnClimb_Up(InputAction.CallbackContext context);
        void OnClimb_Down(InputAction.CallbackContext context);
    }
}
